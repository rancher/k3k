---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: virtualclusterpolicies.k3k.io
spec:
  group: k3k.io
  names:
    kind: VirtualClusterPolicy
    listKind: VirtualClusterPolicyList
    plural: virtualclusterpolicies
    shortNames:
    - vcp
    singular: virtualclusterpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.allowedMode
      name: Mode
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          VirtualClusterPolicy allows defining common configurations and constraints
          for clusters within a clusterpolicy.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            default: {}
            description: Spec defines the desired state of the VirtualClusterPolicy.
            properties:
              allowedMode:
                default: shared
                description: AllowedMode specifies the allowed cluster provisioning
                  mode. Defaults to "shared".
                enum:
                - shared
                - virtual
                type: string
                x-kubernetes-validations:
                - message: mode is immutable
                  rule: self == oldSelf
              defaultNodeSelector:
                additionalProperties:
                  type: string
                description: DefaultNodeSelector specifies the node selector that
                  applies to all clusters (server + agent) in the target Namespace.
                type: object
              defaultPriorityClass:
                description: DefaultPriorityClass specifies the priorityClassName
                  applied to all pods of all clusters in the target Namespace.
                type: string
              disableNetworkPolicy:
                description: DisableNetworkPolicy indicates whether to disable the
                  creation of a default network policy for cluster isolation.
                type: boolean
              limit:
                description: |-
                  Limit specifies the LimitRange that will be applied to all pods within the VirtualClusterPolicy
                  to set defaults and constraints (min/max)
                properties:
                  limits:
                    description: Limits is the list of LimitRangeItem objects that
                      are enforced.
                    items:
                      description: LimitRangeItem defines a min/max usage limit for
                        any resource that matches on kind.
                      properties:
                        default:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Default resource requirement limit value by
                            resource name if resource limit is omitted.
                          type: object
                        defaultRequest:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: DefaultRequest is the default resource requirement
                            request value by resource name if resource request is
                            omitted.
                          type: object
                        max:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Max usage constraints on this kind by resource
                            name.
                          type: object
                        maxLimitRequestRatio:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: MaxLimitRequestRatio if specified, the named
                            resource must have a request and limit that are both non-zero
                            where limit divided by request is less than or equal to
                            the enumerated value; this represents the max burst for
                            the named resource.
                          type: object
                        min:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Min usage constraints on this kind by resource
                            name.
                          type: object
                        type:
                          description: Type of resource that this limit applies to.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                required:
                - limits
                type: object
              podSecurityAdmissionLevel:
                description: PodSecurityAdmissionLevel specifies the pod security
                  admission level applied to the pods in the namespace.
                enum:
                - privileged
                - baseline
                - restricted
                type: string
              quota:
                description: Quota specifies the resource limits for clusters within
                  a clusterpolicy.
                properties:
                  hard:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      hard is the set of desired hard limits for each named resource.
                      More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
                    type: object
                  scopeSelector:
                    description: |-
                      scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota
                      but expressed using ScopeSelectorOperator in combination with possible values.
                      For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.
                    properties:
                      matchExpressions:
                        description: A list of scope selector requirements by scope
                          of the resources.
                        items:
                          description: |-
                            A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator
                            that relates the scope name and values.
                          properties:
                            operator:
                              description: |-
                                Represents a scope's relationship to a set of values.
                                Valid operators are In, NotIn, Exists, DoesNotExist.
                              type: string
                            scopeName:
                              description: The name of the scope that the selector
                                applies to.
                              type: string
                            values:
                              description: |-
                                An array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty.
                                This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - operator
                          - scopeName
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                    x-kubernetes-map-type: atomic
                  scopes:
                    description: |-
                      A collection of filters that must match each object tracked by a quota.
                      If not specified, the quota matches all objects.
                    items:
                      description: A ResourceQuotaScope defines a filter that must
                        match each object tracked by a quota
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            type: object
          status:
            description: Status reflects the observed state of the VirtualClusterPolicy.
            properties:
              conditions:
                description: Conditions are the individual conditions for the cluster
                  set.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastUpdateTime:
                description: LastUpdate is the timestamp when the status was last
                  updated.
                type: string
              observedGeneration:
                description: ObservedGeneration was the generation at the time the
                  status was updated.
                format: int64
                type: integer
              summary:
                description: Summary is a summary of the status.
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
