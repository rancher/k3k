name: Tests E2E

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
    contents: read

jobs:
  tests-e2e-general:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install Ginkgo
      run: go install github.com/onsi/ginkgo/v2/ginkgo
    
    - name: Setup environment
      run: |
        mkdir ${{ github.workspace }}/covdata
        
        echo "COVERAGE=true" >> $GITHUB_ENV
        echo "GOCOVERDIR=${{ github.workspace }}/covdata" >> $GITHUB_ENV
        echo "REPO=ttl.sh/$(uuidgen)" >> $GITHUB_ENV
        echo "VERSION=1h" >> $GITHUB_ENV
        echo "K3S_HOST_VERSION=v1.32.1+k3s1 >> $GITHUB_ENV"

    - name: Install k3s
      run: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${{ env.K3S_HOST_VERSION }} INSTALL_K3S_EXEC="--write-kubeconfig-mode=777" sh -s - 

    - name: Build and package and push dev images
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        REPO: ${{ env.REPO }}
        VERSION: ${{ env.VERSION }}
      run: |
        make build
        make package
        make push
        make install

        # add k3kcli to $PATH
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    - name: Check k3kcli
      run: k3kcli -v

    - name: Run e2e tests
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        REPO: ${{ env.REPO }}
        VERSION: ${{ env.VERSION }}
      run:  make E2E_LABEL_FILTER="!update" test-e2e

    - name: Convert coverage data
      run: go tool covdata textfmt -i=${GOCOVERDIR} -o ${GOCOVERDIR}/cover.out
    
    - name: Upload coverage reports to Codecov (controller)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ${GOCOVERDIR}/cover.out
        flags: controller

    - name: Upload coverage reports to Codecov (e2e)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cover.out
        flags: e2e

    - name: Archive k3s logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3s-logs
        path: /tmp/k3s.log

    - name: Archive k3k logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3k-logs
        path: /tmp/k3k.log
  tests-e2e-update:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install Ginkgo
      run: go install github.com/onsi/ginkgo/v2/ginkgo
    
    - name: Setup environment
      run: |
        mkdir ${{ github.workspace }}/covdata
        
        echo "COVERAGE=true" >> $GITHUB_ENV
        echo "GOCOVERDIR=${{ github.workspace }}/covdata" >> $GITHUB_ENV
        echo "REPO=ttl.sh/$(uuidgen)" >> $GITHUB_ENV
        echo "VERSION=1h" >> $GITHUB_ENV
        echo "K3S_HOST_VERSION=v1.32.1+k3s1 >> $GITHUB_ENV"

    - name: Install k3s
      run: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${{ env.K3S_HOST_VERSION }} INSTALL_K3S_EXEC="--write-kubeconfig-mode=777" sh -s - 

    - name: Build and package and push dev images
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        REPO: ${{ env.REPO }}
        VERSION: ${{ env.VERSION }}
      run: |
        make build
        make package
        make push
        make install

        # add k3kcli to $PATH
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    - name: Check k3kcli
      run: k3kcli -v

    - name: Run e2e tests
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        REPO: ${{ env.REPO }}
        VERSION: ${{ env.VERSION }}
      run:  make E2E_LABEL_FILTER="update" test-e2e

    - name: Convert coverage data
      run: go tool covdata textfmt -i=${GOCOVERDIR} -o ${GOCOVERDIR}/cover.out
    
    - name: Upload coverage reports to Codecov (controller)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ${GOCOVERDIR}/cover.out
        flags: controller

    - name: Upload coverage reports to Codecov (e2e)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cover.out
        flags: e2e

    - name: Archive k3s logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3s-logs
        path: /tmp/k3s.log

    - name: Archive k3k logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3k-logs
        path: /tmp/k3k.log