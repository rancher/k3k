---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: clusters.k3k.io
spec:
  group: k3k.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mode
      name: Mode
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.policyName
      name: Policy
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          Cluster defines a virtual Kubernetes cluster managed by k3k.
          It specifies the desired state of a virtual cluster, including version, node configuration, and networking.
          k3k uses this to provision and manage these virtual clusters.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            default: {}
            description: Spec defines the desired state of the Cluster.
            properties:
              addons:
                description: Addons specifies secrets containing raw YAML to deploy
                  on cluster startup.
                items:
                  description: Addon specifies a Secret containing YAML to be deployed
                    on cluster startup.
                  properties:
                    secretNamespace:
                      description: SecretNamespace is the namespace of the Secret.
                      type: string
                    secretRef:
                      description: SecretRef is the name of the Secret.
                      type: string
                  type: object
                type: array
              agentArgs:
                description: |-
                  AgentArgs specifies ordered key-value pairs for K3s agent pods.
                  Example: ["--node-name=my-agent-node"]
                items:
                  type: string
                type: array
              agentEnvs:
                description: AgentEnvs specifies list of environment variables to
                  set in the agent pod.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              agents:
                default: 0
                description: |-
                  Agents specifies the number of K3s pods to run in agent (worker) mode.
                  Must be 0 or greater. Defaults to 0.
                  This field is ignored in "shared" mode.
                format: int32
                type: integer
                x-kubernetes-validations:
                - message: invalid value for agents
                  rule: self >= 0
              clusterCIDR:
                description: |-
                  ClusterCIDR is the CIDR range for pod IPs.
                  Defaults to 10.42.0.0/16 in shared mode and 10.52.0.0/16 in virtual mode.
                  This field is immutable.
                type: string
                x-kubernetes-validations:
                - message: clusterCIDR is immutable
                  rule: self == oldSelf
              clusterDNS:
                description: |-
                  ClusterDNS is the IP address for the CoreDNS service.
                  Must be within the ServiceCIDR range. Defaults to 10.43.0.10.
                  This field is immutable.
                type: string
                x-kubernetes-validations:
                - message: clusterDNS is immutable
                  rule: self == oldSelf
              customCAs:
                description: CustomCAs specifies the cert/key pairs for custom CA
                  certificates.
                properties:
                  enabled:
                    default: true
                    description: Enabled toggles this feature on or off.
                    type: boolean
                  sources:
                    description: Sources defines the sources for all required custom
                      CA certificates.
                    properties:
                      clientCA:
                        description: ClientCA specifies the client-ca cert/key pair.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                      etcdPeerCA:
                        description: ETCDPeerCA specifies the etcd-peer-ca cert/key
                          pair.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                      etcdServerCA:
                        description: ETCDServerCA specifies the etcd-server-ca cert/key
                          pair.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                      requestHeaderCA:
                        description: RequestHeaderCA specifies the request-header-ca
                          cert/key pair.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                      serverCA:
                        description: ServerCA specifies the server-ca cert/key pair.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                      serviceAccountToken:
                        description: ServiceAccountToken specifies the service-account-token
                          key.
                        properties:
                          secretName:
                            description: |-
                              SecretName specifies the name of an existing secret to use.
                              The controller expects specific keys inside based on the credential type:
                              - For TLS pairs (e.g., ServerCA): 'tls.crt' and 'tls.key'.
                              - For ServiceAccountTokenKey: 'tls.key'.
                            type: string
                        required:
                        - secretName
                        type: object
                    required:
                    - clientCA
                    - etcdPeerCA
                    - etcdServerCA
                    - requestHeaderCA
                    - serverCA
                    - serviceAccountToken
                    type: object
                required:
                - enabled
                - sources
                type: object
              expose:
                description: |-
                  Expose specifies options for exposing the API server.
                  By default, it's only exposed as a ClusterIP.
                properties:
                  ingress:
                    description: Ingress specifies options for exposing the API server
                      through an Ingress.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies annotations to add to the
                          Ingress.
                        type: object
                      ingressClassName:
                        description: IngressClassName specifies the IngressClass to
                          use for the Ingress.
                        type: string
                    type: object
                  loadbalancer:
                    description: LoadBalancer specifies options for exposing the API
                      server through a LoadBalancer service.
                    properties:
                      etcdPort:
                        description: |-
                          ETCDPort is the port on which the ETCD service is exposed when type is LoadBalancer.
                          If not specified, the default etcd 2379 port will be allocated.
                          If 0 or negative, the port will not be exposed.
                        format: int32
                        type: integer
                      serverPort:
                        description: |-
                          ServerPort is the port on which the K3s server is exposed when type is LoadBalancer.
                          If not specified, the default https 443 port will be allocated.
                          If 0 or negative, the port will not be exposed.
                        format: int32
                        type: integer
                    type: object
                  nodePort:
                    description: NodePort specifies options for exposing the API server
                      through NodePort.
                    properties:
                      etcdPort:
                        description: |-
                          ETCDPort is the port on each node on which the ETCD service is exposed when type is NodePort.
                          If not specified, a random port between 30000-32767 will be allocated.
                          If out of range, the port will not be exposed.
                        format: int32
                        type: integer
                      serverPort:
                        description: |-
                          ServerPort is the port on each node on which the K3s server is exposed when type is NodePort.
                          If not specified, a random port between 30000-32767 will be allocated.
                          If out of range, the port will not be exposed.
                        format: int32
                        type: integer
                    type: object
                type: object
                x-kubernetes-validations:
                - message: ingress, loadbalancer and nodePort are mutually exclusive;
                    only one can be set
                  rule: '[has(self.ingress), has(self.loadbalancer), has(self.nodePort)].filter(x,
                    x).size() <= 1'
              mirrorHostNodes:
                description: |-
                  MirrorHostNodes controls whether node objects from the host cluster
                  are mirrored into the virtual cluster.
                type: boolean
              mode:
                allOf:
                - enum:
                  - shared
                  - virtual
                - enum:
                  - shared
                  - virtual
                default: shared
                description: |-
                  Mode specifies the cluster provisioning mode: "shared" or "virtual".
                  Defaults to "shared". This field is immutable.
                type: string
                x-kubernetes-validations:
                - message: mode is immutable
                  rule: self == oldSelf
              nodeSelector:
                additionalProperties:
                  type: string
                description: |-
                  NodeSelector specifies node labels to constrain where server/agent pods are scheduled.
                  In "shared" mode, this also applies to workloads.
                type: object
              persistence:
                description: |-
                  Persistence specifies options for persisting etcd data.
                  Defaults to dynamic persistence, which uses a PersistentVolumeClaim to provide data persistence.
                  A default StorageClass is required for dynamic persistence.
                properties:
                  storageClassName:
                    description: |-
                      StorageClassName is the name of the StorageClass to use for the PVC.
                      This field is only relevant in "dynamic" mode.
                    type: string
                  storageRequestSize:
                    default: 2G
                    description: |-
                      StorageRequestSize is the requested size for the PVC.
                      This field is only relevant in "dynamic" mode.
                    type: string
                  type:
                    default: dynamic
                    description: Type specifies the persistence mode.
                    type: string
                type: object
              priorityClass:
                description: |-
                  PriorityClass specifies the priorityClassName for server/agent pods.
                  In "shared" mode, this also applies to workloads.
                type: string
              serverArgs:
                description: |-
                  ServerArgs specifies ordered key-value pairs for K3s server pods.
                  Example: ["--tls-san=example.com"]
                items:
                  type: string
                type: array
              serverEnvs:
                description: ServerEnvs specifies list of environment variables to
                  set in the server pod.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              serverLimit:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: ServerLimit specifies resource limits for server nodes.
                type: object
              servers:
                default: 1
                description: |-
                  Servers specifies the number of K3s pods to run in server (control plane) mode.
                  Must be at least 1. Defaults to 1.
                format: int32
                type: integer
                x-kubernetes-validations:
                - message: cluster must have at least one server
                  rule: self >= 1
              serviceCIDR:
                description: |-
                  ServiceCIDR is the CIDR range for service IPs.
                  Defaults to 10.43.0.0/16 in shared mode and 10.53.0.0/16 in virtual mode.
                  This field is immutable.
                type: string
                x-kubernetes-validations:
                - message: serviceCIDR is immutable
                  rule: self == oldSelf
              sync:
                default: {}
                description: Sync specifies the resources types that will be synced
                  from virtual cluster to host cluster.
                properties:
                  configmaps:
                    default:
                      enabled: true
                    description: ConfigMaps resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                  ingresses:
                    default:
                      enabled: false
                    description: Ingresses resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                  persistentVolumeClaims:
                    default:
                      enabled: true
                    description: PersistentVolumeClaims resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                  priorityClasses:
                    default:
                      enabled: false
                    description: PriorityClasses resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                  secrets:
                    default:
                      enabled: true
                    description: Secrets resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                  services:
                    default:
                      enabled: true
                    description: Services resources sync configuration.
                    properties:
                      enabled:
                        description: Enabled is an on/off switch for syncing resources.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Selector specifies set of labels of the resources that will be synced, if empty
                          then all resources of the given type will be synced.
                        type: object
                    type: object
                type: object
              tlsSANs:
                description: TLSSANs specifies subject alternative names for the K3s
                  server certificate.
                items:
                  type: string
                type: array
              tokenSecretRef:
                description: |-
                  TokenSecretRef is a Secret reference containing the token used by worker nodes to join the cluster.
                  The Secret must have a "token" field in its data.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              version:
                description: |-
                  Version is the K3s version to use for the virtual nodes.
                  It should follow the K3s versioning convention (e.g., v1.28.2-k3s1).
                  If not specified, the Kubernetes version of the host node will be used.
                type: string
              workerLimit:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: WorkerLimit specifies resource limits for agent nodes.
                type: object
            type: object
          status:
            default: {}
            description: Status reflects the observed state of the Cluster.
            properties:
              clusterCIDR:
                description: ClusterCIDR is the CIDR range for pod IPs.
                type: string
              clusterDNS:
                description: ClusterDNS is the IP address for the CoreDNS service.
                type: string
              conditions:
                description: Conditions are the individual conditions for the cluster
                  set.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              hostVersion:
                description: HostVersion is the Kubernetes version of the host node.
                type: string
              kubeletPort:
                description: KubeletPort specefies the port used by k3k-kubelet in
                  shared mode.
                type: integer
              phase:
                default: Unknown
                description: Phase is a high-level summary of the cluster's current
                  lifecycle state.
                enum:
                - Pending
                - Provisioning
                - Ready
                - Failed
                - Terminating
                - Unknown
                type: string
              policyName:
                description: PolicyName specifies the virtual cluster policy name
                  bound to the virtual cluster.
                type: string
              serviceCIDR:
                description: ServiceCIDR is the CIDR range for service IPs.
                type: string
              tlsSANs:
                description: TLSSANs specifies subject alternative names for the K3s
                  server certificate.
                items:
                  type: string
                type: array
              webhookPort:
                description: WebhookPort specefies the port used by webhook in k3k-kubelet
                  in shared mode.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
