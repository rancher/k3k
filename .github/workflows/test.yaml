name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
    contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        args: --timeout=5m
        version: v2.3.0

  validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Validate
      run: make validate

  tests:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Run unit tests
      run: make test-unit

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cover.out
        flags: unit

# Test on real k3s cluster not dockerized
  tests-e2e:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install Ginkgo
      run: go install github.com/onsi/ginkgo/v2/ginkgo
    
    - name: Set coverage environment
      run: |
        mkdir ${{ github.workspace }}/covdata
        
        echo "COVERAGE=true" >> $GITHUB_ENV
        echo "GOCOVERDIR=${{ github.workspace }}/covdata" >> $GITHUB_ENV

    - name: Install k3s
      run: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode=777" sh -s - 

    - name: Build and package and push dev images
      run: |
        uuidgen > uuidgen.txt
        REPO="ttl.sh/$(cat uuidgen.txt)" VERSION=1h make build
        REPO="ttl.sh/$(cat uuidgen.txt)" VERSION=1h make package
        REPO="ttl.sh/$(cat uuidgen.txt)" VERSION=1h make push

        # add k3kcli to $PATH
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    - name: Check k3kcli
      run: k3kcli -v

    - name: Run e2e tests
      run: E2E_KUBECONFIG=/etc/rancher/k3s/k3s.yaml REPO="ttl.sh/$(cat uuidgen.txt)" VERSION=1h make test-e2e

    - name: Convert coverage data
      run: go tool covdata textfmt -i=${GOCOVERDIR} -o ${GOCOVERDIR}/cover.out
    
    - name: Upload coverage reports to Codecov (controller)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ${GOCOVERDIR}/cover.out
        flags: controller

    - name: Upload coverage reports to Codecov (e2e)
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cover.out
        flags: e2e

    - name: Archive k3s logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3s-logs
        path: /tmp/k3s.log

    - name: Archive k3k logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-k3k-logs
        path: /tmp/k3k.log

  tests-cli:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install Ginkgo
      run: go install github.com/onsi/ginkgo/v2/ginkgo
    
    - name: Set coverage environment
      run: |
        mkdir ${{ github.workspace }}/covdata
        
        echo "COVERAGE=true" >> $GITHUB_ENV
        echo "GOCOVERDIR=${{ github.workspace }}/covdata" >> $GITHUB_ENV
    
    - name: Build and package
      run: |
        make build
        make package

        # add k3kcli to $PATH
        echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

    - name: Check k3kcli
      run: k3kcli -v

    - name: Run cli tests
      run: make test-cli

    - name: Convert coverage data
      run: go tool covdata textfmt -i=${{ github.workspace }}/covdata -o ${{ github.workspace }}/covdata/cover.out

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ${{ github.workspace }}/covdata/cover.out
        flags: cli

    - name: Archive k3s logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cli-k3s-logs
        path: /tmp/k3s.log

    - name: Archive k3k logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cli-k3k-logs
        path: /tmp/k3k.log
